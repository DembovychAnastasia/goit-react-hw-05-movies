{"version":3,"file":"static/js/339.53b2470e.chunk.js","mappings":"4LAEaA,EAAS,WAClB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,MAAO,UACPC,UAAU,iBACVC,aAAc,CACZC,QAAS,QACTC,UAAW,KAMpB,C,mKCfYC,EAAgBC,EAAAA,GAAAA,QAAH,gKASbC,EAAeD,EAAAA,GAAAA,GAAH,mIAaZE,GANoBF,EAAAA,GAAAA,QAAH,iGAMVA,EAAAA,GAAAA,GAAH,6PAgBJG,EAAWH,EAAAA,GAAAA,GAAH,8EAMRI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,mT,SCpBvB,EAlBkB,SAAC,GAAwB,IAAtBM,EAAqB,EAArBA,eACnB,OACE,UAACP,EAAD,YACE,SAACE,EAAD,8BAEA,SAACC,EAAD,UACGI,EAAeC,KAAI,SAAAC,GAAa,OAC/B,SAACL,EAAD,WACE,SAACC,EAAD,CAAYK,GAAE,kBAAaD,EAAcE,IAAzC,SACGF,EAAcG,SAFJH,EAAcE,GADE,QAUxC,E,SCiBD,EArCY,WACR,OAA4CE,EAAAA,EAAAA,UAAS,IAArD,eAAON,EAAP,KAAuBO,EAAvB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACC,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBD,OAlBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAmB,mCAAG,sGAExBF,GAAS,GACTF,GAAa,GAHW,UAIEK,EAAAA,EAAAA,MAJF,gBAIhBC,EAJgB,EAIhBA,QACRR,EAAkBQ,GALM,kDAOxBJ,GAAS,GAPe,yBASxBF,GAAa,GATW,6EAAH,qDAazBI,GACD,GAAE,KAGG,gBAAKG,MAAO,CAAC7B,MAAO,QAApB,SAEPqB,GACC,SAACxB,EAAA,EAAD,IACE0B,EAEAO,MAAO,2EAGT,SAAC,EAAD,CAAWjB,eAAgBA,KAIhC,C,uHCtCDkB,EAAAA,EAAAA,SAAAA,QAAA,+BACAA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAQ,mCACRC,eAAe,GAIV,IAAMN,EAAgB,mCAAG,6GAAOO,EAAP,+BAAc,EAAGC,EAAjB,yCAELJ,EAAAA,EAAAA,IAAU,sBAAuB,CACtDK,OAAQ,CACNF,KAAAA,EACAG,SAAUF,KALc,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAQrBA,GARqB,wCAUtB,IAAIC,MAAM,4BAVY,0DAAH,qDA4BhBC,EAAc,mCAAG,WAAOC,EAASN,GAAhB,kGAEHJ,EAAAA,EAAAA,IAAA,gBAAmBU,GAAW,CACnDL,OAAQ,CACNnB,GAAIwB,EACJJ,SAAUF,KALY,uBAElBG,EAFkB,EAElBA,KAFkB,kBAQnBA,GARmB,sCAUpB,IAAIC,MAAM,0CAVU,yDAAH,uD","sources":["components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import { Triangle } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n      <Triangle\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        color= \"#ff0303\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{\n          display: 'block',\n          marginTop: 20,\n          // marginLeft: 'auto',\n          // marginRight: 'auto',\n        }}\n      />\n    );\n}","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: center;\n  padding-right: 20px;\n  padding-left: 20px;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 40px;\n  font-weight: 900;\n  color: #000000;\n  /* margin: 0 auto; */\n  padding: 20px 0px;\n`;\nexport const StyledSectionForm = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  list-style: none;\n  justify-content: center;\n  gap: 15px;\n  color: #000;\n\n  height: 100%;\n\n  padding-left: 40px;\n  padding-right: 40px;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #000;\n  text-decoration: none;\n  text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n    rgba(0, 0, 0, 0.5) 1px 1px 1px;\n  color: #000000;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #de3614;\n    text-shadow: 0 0 15px #635d5c;\n  }\n`;","import PropTypes from 'prop-types';\nimport {\n  StyledSection,\n  StyledLink,\n  SectionTitle,\n  List,\n  ListItem,\n} from './MovieList.styled';\n\nconst MovieList = ({ trendingMovies }) => {\n  return (\n    <StyledSection>\n      <SectionTitle>Trending today</SectionTitle>\n\n      <List>\n        {trendingMovies.map(trendingMovie => (\n          <ListItem key={trendingMovie.id}>\n            <StyledLink to={`/movies/${trendingMovie.id}`}>\n              {trendingMovie.title}\n            </StyledLink>\n          </ListItem>\n        ))}\n      </List>\n    </StyledSection>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};","import { useEffect, useState } from 'react';\nimport { fetchTrendMovies } from '../services/api';\nimport MovieList from '../components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home =() => {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n     const [error, setError] = useState(false);\n    useEffect(() => {\n        const fetchTrendingMovies = async () => {\n          try {\n            setError(false);\n            setIsLoading(true);\n            const { results } = await fetchTrendMovies();\n            setTrendingMovies(results);\n          } catch (error) {\n            setError(true);\n          } finally {\n            setIsLoading(false);\n          }\n        };\n    \n        fetchTrendingMovies();\n      }, []);\n    \n    \n    return  <div style={{width: '100%'}}\n    >\n    {isLoading ? (\n      <Loader />\n    ) : error ? (\n    //   <NoCastText>\n        alert ('Sorry, we could not fetch the trending movies. Please try again later.')\n    //   </NoCastText>\n    ) : (\n      <MovieList trendingMovies={trendingMovies} />\n    )}\n  </div>\n\n}\n\nexport default Home;    \n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `7d4ac179e844e8d16c4af681deb5028c`,\n  include_adult: false,\n\n};\n\nexport const fetchTrendMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\n\n\nexport const fetchMovieByName = async (page = 1, query = '', lng) => {\n  try {\n    const urlParam = query\n      ? `/search/movie?page=${page}&query=${query}&language=${lng}`\n      : `/movie/upcoming?page=${page}&language=${lng}`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const fetchMovieById = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const fetchMovieCast = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\nexport const etchMovieReviews = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n\n"],"names":["Loader","visible","height","width","color","ariaLabel","wrapperStyle","display","marginTop","StyledSection","styled","SectionTitle","List","ListItem","StyledLink","Link","trendingMovies","map","trendingMovie","to","id","title","useState","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","fetchTrendMovies","results","style","alert","axios","api_key","include_adult","page","lng","params","language","data","Error","fetchMovieById","movieId"],"sourceRoot":""}