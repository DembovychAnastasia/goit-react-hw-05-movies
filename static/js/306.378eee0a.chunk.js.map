{"version":3,"file":"static/js/306.378eee0a.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MovieDetailCard/MovieDetailCard.styled.jsx","components/MovieDetailCard/MovieDetailCard.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import { Triangle } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n      <Triangle\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        color= \"#ff0303\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{\n          display: 'block',\n          marginTop: 20,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n        }}\n      />\n    );\n}","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieCardContainer = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 20px;\n`;\n\nexport const Img = styled.img`\n  display: block;\n  width: 100%;\n  background-repeat: no-repeat;\n  background-size: cover;\n  max-width: 400px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-top: 20px;\n`;\n\nexport const MovieName = styled.h2`\n  font-size: 30px;\n  font-weight: 700;\n  color: #010101;\n  margin: 0;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoText = styled.p`\n  font-size: 20px;\n  font-weight: 400;\n  margin-bottom: 20px;\n  color: #171716;\n  \n`;\n\nexport const MovieInfoTextBold = styled.span`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const MoreInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  margin-top: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  width: 100%;\n`;\n\nexport const MoreInfoHeader = styled.h3`\ntext-align: left;\n  font-size: 30px;\n  font-weight: 700;\n  color: #000000;\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n  font-size: 18px;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  width: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  border: none;\n  flex-direction: row;\n\n  border: 1px solid #ff3401;\n  border-radius: 4px;\n  padding: 5px;\n \n  background-color: transparent;\n  \n  text-decoration: none;\n  color: #ff3401;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #ff3401;\n    color: #ffffff;\n\n  }\n`;","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Img,\n  List,\n  ListItem,\n  MoreInfoHeader,\n  MoreInfoWrapper,\n  MovieCardContainer,\n  MovieInfo,\n  MovieInfoText,\n  MovieInfoTextBold,\n  MovieName,\n  StyledLink,\n} from './MovieDetailCard.styled';\nimport { Loader} from 'components/Loader/Loader';\n\nconst MovieCard = ({ movie} ) => {\n  const {\n    original_title,\n    release_date,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n  const location = useLocation();\n  const releaseDate = new Date(release_date);\n\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n\n  if (!original_title) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <MovieCardContainer>\n        <Img src={posterUrl} alt={`${original_title} poster`} />\n\n        <MovieInfo>\n          <MovieName>\n            {original_title ?? 'Unknown'} ({releaseYear})\n          </MovieName>\n          <MovieInfoText>User Score: {userScore}</MovieInfoText>\n          <MovieInfoText>\n            <MovieInfoTextBold>Overview:</MovieInfoTextBold> {overview}\n          </MovieInfoText>\n\n          {genres && genres.length > 0 && (\n            <MovieInfoText>\n              <MovieInfoTextBold>Genres:</MovieInfoTextBold>\n              {genres.map(genre => genre.name).join(', ')}\n            </MovieInfoText>\n          )}\n        </MovieInfo>\n      </MovieCardContainer>\n\n      <MoreInfoWrapper>\n        <MoreInfoHeader>Additional information</MoreInfoHeader>\n\n        <List>\n          <ListItem>\n            <StyledLink\n              to=\"cast\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Cast\n            </StyledLink>\n          </ListItem>\n\n          <ListItem>\n            <StyledLink\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </StyledLink>\n          </ListItem>\n        </List>\n      </MoreInfoWrapper>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\n\nexport default MovieCard;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n \n\n  padding: 20px 40px;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #e4c3ad;\n  cursor: pointer;\n\n  text-decoration: none;\n  color: rgb(255, 255, 255);\n  text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n    rgba(0, 0, 0, 0.5) 1px 1px 1px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n\n  border: 1px solid #ff3401;\n  border-radius: 4px;\n  padding: 5px;\n  text-decoration: none;\n  background-color: transparent ;\n  color: #ff3401;\n  margin-top: 30px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #ff3401;\n    color: #ffffff;\n  }\n`;","import { Suspense } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { fetchMovieById } from '../services/api';\nimport MovieCard from '../components/MovieDetailCard/MovieDetailCard';\nimport { Button, Container, StyledLink } from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [selectedMovie, setSelectedMovie] = useState({});\n\n  useEffect(() => {\n    const fetchSelectedMovie = async movieId => {\n      try {\n        const movieData = await fetchMovieById(movieId);\n        setSelectedMovie(movieData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchSelectedMovie(movieId);\n  }, [movieId]);\n \n\n  console.log(movieId);\n\n  return (\n    <main>\n      <Container>\n        <StyledLink to={location?.state?.from ?? '/'}>\n          <Button type=\"button\">\n            <BiArrowBack\n              style={{ width: '25px', height: '25px', display: 'inline-block' }}\n            />\n            Go back\n          </Button>\n        </StyledLink>\n\n        {Object.keys(selectedMovie).length !== 0 && <MovieCard movie={selectedMovie} />}\n        {/* <MovieCard movie={selectedMovie} /> */}\n\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `7d4ac179e844e8d16c4af681deb5028c`,\n  include_adult: false,\n\n};\n\nexport const fetchTrendMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\n\n\nexport const fetchMovieByName = async (query) => {\n  try {\n    const urlParam = query\n      ? `https://api.themoviedb.org/3/search/movie?api_key=7d4ac179e844e8d16c4af681deb5028c&language=en-US&query=${query}&page=1&include_adult=false`\n      : `/trending/movie/day`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const fetchMovieById = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const fetchMovieCast = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\n\nexport const fetchMovieReviews = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n\n"],"names":["Loader","visible","height","width","color","ariaLabel","wrapperStyle","display","marginTop","marginLeft","marginRight","MovieCardContainer","styled","Img","MovieInfo","MovieName","MovieInfoText","MovieInfoTextBold","MoreInfoWrapper","MoreInfoHeader","List","ListItem","StyledLink","Link","movie","original_title","release_date","poster_path","vote_average","overview","genres","location","useLocation","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","src","alt","length","map","genre","name","join","to","state","from","Container","Button","movieId","useParams","useState","selectedMovie","setSelectedMovie","useEffect","fetchSelectedMovie","fetchMovieById","movieData","console","log","type","style","Object","keys","Suspense","fallback","axios","api_key","include_adult","fetchTrendMovies","page","lng","params","language","data","Error","fetchMovieByName","query","urlParam","id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}