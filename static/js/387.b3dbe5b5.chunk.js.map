{"version":3,"file":"static/js/387.b3dbe5b5.chunk.js","mappings":"6RAEaA,EAAUC,EAAAA,GAAAA,IAAH,qLAUPC,EAAeD,EAAAA,GAAAA,GAAH,2JAUZE,EAAaF,EAAAA,GAAAA,GAAH,yHAQVG,EAAiBH,EAAAA,GAAAA,GAAH,uJASdI,EAASJ,EAAAA,GAAAA,GAAH,yJAUNK,EAASL,EAAAA,GAAAA,EAAH,yJAUNM,EAAgBN,EAAAA,GAAAA,EAAH,0J,SCR1B,EAtCgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAESC,EAAAA,EAAAA,IAAkBP,GAF3B,gBAETQ,EAFS,EAETA,QACRJ,EAAWI,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDASlBJ,GACD,GAAE,CAACN,KAGF,UAACR,EAAD,YACE,SAACE,EAAD,sBAECS,EAAQQ,QACP,SAAChB,EAAD,CAAYiB,UAAU,oBAAtB,SACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,UAAClB,EAAD,CAAgBgB,UAAU,cAA1B,WACE,UAACf,EAAD,sBAAiBiB,EAAOC,WACxB,SAACjB,EAAD,UAASgB,EAAOE,YAF2BF,EAAOG,GADnC,OAQrB,SAAClB,EAAD,8DAMP,C,kMChDDmB,EAAAA,EAAAA,SAAAA,QAAA,+BACAA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAQ,mCACRC,eAAe,GAIV,IAAMC,EAAgB,mCAAG,6GAAOC,EAAP,+BAAc,EAAGC,EAAjB,yCAELL,EAAAA,EAAAA,IAAU,sBAAuB,CACtDM,OAAQ,CACNF,KAAAA,EACAG,SAAUF,KALc,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAQrBA,GARqB,wCAUtB,IAAIC,MAAM,4BAVY,0DAAH,qDAgBhBC,EAAgB,mCAAG,WAAOC,GAAP,2FAEtBC,EAAWD,EAAK,kHACyFA,EADzF,qDAFM,SAKLX,EAAAA,EAAAA,IAAUY,GALL,uBAKpBJ,EALoB,EAKpBA,KALoB,kBAMrBA,GANqB,sCAQtB,IAAIC,MAAM,2BARY,yDAAH,sDAYhBI,EAAc,mCAAG,WAAO/B,EAASuB,GAAhB,kGAEHL,EAAAA,EAAAA,IAAA,gBAAmBlB,GAAW,CACnDwB,OAAQ,CACNP,GAAIjB,EACJyB,SAAUF,KALY,uBAElBG,EAFkB,EAElBA,KAFkB,kBAQnBA,GARmB,sCAUpB,IAAIC,MAAM,0CAVU,yDAAH,wDAcdK,EAAc,mCAAG,WAAOhC,GAAP,kGAEHkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,aAFG,uBAElB0B,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,sCAKpB,IAAIC,MAAM,gCALU,yDAAH,sDAUdpB,EAAiB,mCAAG,WAAOP,GAAP,kGAENkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,aAFM,uBAErB0B,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,sCAKvB,IAAIC,MAAM,mCALa,yDAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 30px;\n  padding-right: 20px;\n  padding-left: 20px;\n  padding-bottom: 20px;\n  margin: 0 auto;\n`;\n\nexport const ReviewHeader = styled.h3`\n  display: inline-block;\n  font-size: 30px;\n  font-weight: 700;\n\n  color: #040404;\n  margin-bottom: 20px;\n  margin: 0 auto;\n`;\n\nexport const ReviewList = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const ReviewListItem = styled.li`\n  padding-bottom: 10px;\n  padding: 15px;\n  &:hover,\n  &:focus {\n    box-shadow: rgba(0, 0, 0, 0.3) 0px 8px 32px 0px;\n  }\n`;\n\nexport const Author = styled.h4`\n  font-size: 20px;\n  font-weight: 400;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  max-width: 220px;\n  color: #000000;\n \n`;\n\nexport const Review = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  margin-top: 20px;\n  text-align: justify;\n  color: #040404;\n  margin: 0 auto;\n   \n`;\n\nexport const NoReviewsText = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n  max-width: 500px;\n  color: #000000;\n  font-size: 16px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../services/api';\nimport {\n  Author,\n  NoReviewsText,\n  Review,\n  ReviewHeader,\n  ReviewList,\n  ReviewListItem,\n  Wrapper,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      <ReviewHeader>Reviews</ReviewHeader>\n\n      {reviews.length ? (\n        <ReviewList className=\"reviews-container\">\n          {reviews.map(review => (\n            <ReviewListItem className=\"review-card\" key={review.id}>\n              <Author>Author: {review.author}</Author>\n              <Review>{review.content}</Review>\n            </ReviewListItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <NoReviewsText>\n          We don't have any reviews for this movie yet.\n        </NoReviewsText>\n      )}\n    </Wrapper>\n  );\n};\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `7d4ac179e844e8d16c4af681deb5028c`,\n  include_adult: false,\n\n};\n\nexport const fetchTrendMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\n\n\nexport const fetchMovieByName = async (query) => {\n  try {\n    const urlParam = query\n      ? `https://api.themoviedb.org/3/search/movie?api_key=7d4ac179e844e8d16c4af681deb5028c&language=en-US&query=${query}&page=1&include_adult=false`\n      : `/trending/movie/day`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const fetchMovieById = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const fetchMovieCast = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\n\nexport const fetchMovieReviews = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n\n"],"names":["Wrapper","styled","ReviewHeader","ReviewList","ReviewListItem","Author","Review","NoReviewsText","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","fetchMovieReviews","results","console","log","length","className","map","review","author","content","id","axios","api_key","include_adult","fetchTrendMovies","page","lng","params","language","data","Error","fetchMovieByName","query","urlParam","fetchMovieById","fetchMovieCast"],"sourceRoot":""}