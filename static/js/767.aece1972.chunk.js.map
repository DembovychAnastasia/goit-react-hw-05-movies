{"version":3,"file":"static/js/767.aece1972.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MoviesSearch/MoviesSearch.styled.jsx","components/MoviesSearch/MoviesSearch.jsx","pages/Movies.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: center;\n  padding-right: 20px;\n  padding-left: 20px;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 40px;\n  font-weight: 900;\n  color: #000000;\n  /* margin: 0 auto; */\n  padding: 20px 0px;\n  text-align: center;\n`;\nexport const StyledSectionForm = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  list-style: none;\n  justify-content: center;\n  gap: 15px;\n  color: #000;\n\n  height: 100%;\n\n  padding-left: 40px;\n  padding-right: 40px;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #000;\n  text-decoration: none;\n  text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n    rgba(0, 0, 0, 0.5) 1px 1px 1px;\n  color: #000000;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color: transparent;\n\n  &:hover,\n  &:focus {\n    color: #de3614;\n    box-shadow: rgba(0, 0, 0, 0.3) 0px 8px 32px 0px;\n  }\n`;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  position: relative;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.14;\n  \n  width: 280px;\n  margin-right: 10px;\n  \n  border: 0.5px solid #ff3401;\n  outline: 0px;\n  border-radius: 4px;\n  padding: 10px 10px;\n\n  &:focus-within {\n    border-bottom: 1px solid #ff3401;\n    box-shadow: 0 0 15px #ff3401;\n    border-radius: 5px;\n  }\n  &::placeholder {\n    color: #ff3401;\n  }\n`;\n\nexport const Button = styled.button`\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    font-size: 16px;\n    border: 1px solid rgb(255, 52, 1);\n    border-radius: 4px;\n    padding: 5px;\n    text-decoration: none;\n    background-color: transparent;\n    color: rgb(255, 52, 1);\n  \n    cursor: pointer;\n  \n\n  &:hover, \n  &:focus {\n    \n    color: #ff3401;\n    fill: #ff3401;\n    stroke: #ff3401;\n  }\n`;","import PropTypes from 'prop-types';\nimport { toast } from 'react-hot-toast';\nimport { Button, Form, Input } from './MoviesSearch.styled';\n\n\nconst SearchMovies = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const query = event.target.elements.query.value;\n\n    if (!query) {\n      toast.error('Please enter something');\n      return;\n    }\n\n    onSubmit(query);\n    event.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input name=\"query\" type=\"text\" placeholder=\"Search movies\" />\n      <Button type=\"submit\">\n       Search\n      </Button>\n    </Form>\n  );\n};\n\nSearchMovies.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default SearchMovies;","import React, { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { fetchMovieByName } from '../services/api';\nimport SearchMovies from '../components/MoviesSearch/MoviesSearch';\nimport {\n  List,\n  ListItem,\n  SectionTitle,\n  StyledLink,\n  StyledSectionForm,\n} from '../components/MovieList/MovieList.styled';\n\nconst Movies = () => {\n \n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n\n    const getMovie = async () => {\n      try {\n        const { results } = await fetchMovieByName(query);\n\n        if (results.length === 0) {\n          toast.dismiss();\n          toast.error('No movies found');\n          setMovies([]);\n        } else {\n          setMovies(results);\n        }\n      } catch (error) {\n        toast.error(error.message);\n        setMovies([]);\n      }\n    };\n\n    getMovie();\n  }, [searchParams]);\n\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <main >\n      <StyledSectionForm>\n        <SectionTitle>Movies Page</SectionTitle>\n        <SearchMovies onSubmit={handleSubmit} movie={setSearchParams}/>{' '}\n        <List>\n          {movies.map(movie => (\n            <ListItem key={movie.id}>\n              <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt = {`${movie.original_title} poster`}/> \n              {movie.title}\n              </StyledLink>\n            </ListItem>\n          ))}\n        </List>\n      </StyledSectionForm>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `7d4ac179e844e8d16c4af681deb5028c`,\n  include_adult: false,\n\n};\n\nexport const fetchTrendMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\n\n\nexport const fetchMovieByName = async (query) => {\n  try {\n    const urlParam = query\n      ? `https://api.themoviedb.org/3/search/movie?api_key=7d4ac179e844e8d16c4af681deb5028c&language=en-US&query=${query}&page=1&include_adult=false`\n      : `/trending/movie/day`;\n    const { data } = await axios.get(urlParam);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n\nexport const fetchMovieById = async (movieId, lng) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n        language: lng,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movie with that name');\n  }\n};\n\nexport const fetchMovieCast = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no cast movie');\n  }\n};\n\n\nexport const fetchMovieReviews = async (movieId) => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`);\n    return data;\n  } catch (error) {\n    throw new Error('Oops, we don`t have any reviews');\n  }\n};\n\n"],"names":["StyledSection","styled","SectionTitle","StyledSectionForm","List","ListItem","StyledLink","Link","Form","Input","Button","onSubmit","event","preventDefault","query","target","elements","value","reset","toast","name","type","placeholder","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","getMovie","fetchMovieByName","results","length","message","movie","map","to","id","state","from","src","poster_path","alt","original_title","title","axios","api_key","include_adult","fetchTrendMovies","page","lng","params","language","data","Error","urlParam","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}